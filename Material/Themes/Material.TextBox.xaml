<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Material.Controls"
                    xmlns:converters="clr-namespace:Material.Converters"
                    xmlns:behaviors="clr-namespace:Material.Controls.Behaviors">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Material.Fonts.xaml"/>
		<ResourceDictionary Source="Material.Palette.xaml"/>
		<ResourceDictionary Source="Material.Drawables.xaml"/>
		<ResourceDictionary Source="Material.Button.xaml"/>
		<ResourceDictionary Source="Material.Shadows.xaml"/>
		<ResourceDictionary Source="Material.ExtendedPalette.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<Style TargetType="TextBox" BasedOn="{StaticResource t15pSubhead}" x:Key="HintedTextBox">
		<Setter Property="MinHeight" Value="50"/>
		<Setter Property="BorderBrush" Value="{StaticResource mtGrey600}"/>
		<Setter Property="CaretBrush" Value="{StaticResource mtBlueGrey800}"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<!--<Setter Property="behaviors:HintAssist.VisualStateManagerService">
			<Setter.Value>
				<behaviors:HintVisualStateManagerService/>
			</Setter.Value>
		</Setter>-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup Name="HintVisualStates">
								<VisualState Name="HintVisible">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Scale" 
																											Storyboard.TargetProperty="ScaleY" 
																											To="1" 
																											Duration="0:0:0.12" 
																											EasingFunction="{Ease Out, Quad}"/>
										
										<DoubleAnimation Storyboard.TargetName="PART_Scale" 
																											Storyboard.TargetProperty="ScaleX" 
																											To="1" 
																											Duration="0:0:0.12" 
																											EasingFunction="{Ease Out, Quad}"/>

										<DoubleAnimation Storyboard.TargetName="PART_ContentScale" 
																											Storyboard.TargetProperty="Y" 
																											To="0" 
																											Duration="0:0:0.06"
																											EasingFunction="{Ease Out, Quad}"/>

										<DoubleAnimation Storyboard.TargetName="PART_HintTranslate" 
																											Storyboard.TargetProperty="Y" 
																											To="-3" 
																											Duration="0:0:0.12" 
																											EasingFunction="{Ease Out, Quad}"/>
										
									</Storyboard>
								</VisualState>
								<VisualState Name="HintSmall">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Scale" 
																											Storyboard.TargetProperty="ScaleY"
																											To=".6"
																											Duration="0:0:0.12"
																											EasingFunction="{Ease In, Quad}"/>
										
										<DoubleAnimation Storyboard.TargetName="PART_Scale" 
																											Storyboard.TargetProperty="ScaleX"
																											To=".6"
																											Duration="0:0:0.12" 
																											EasingFunction="{Ease In, Quad}"/>

										<DoubleAnimation Storyboard.TargetName="PART_ContentScale" 
																											Storyboard.TargetProperty="Y" 
																											To="0" 
																											Duration="0:0:0.06"
																											EasingFunction="{Ease Out, Quad}"/>

										<DoubleAnimation Storyboard.TargetName="PART_HintTranslate" 
																											Storyboard.TargetProperty="Y" 
																											To="-3" 
																											Duration="0:0:0.12" 
																											EasingFunction="{Ease Out, Quad}"/>
									</Storyboard>
								</VisualState>
								<VisualState Name="HintInvisible">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Scale" 
																											Storyboard.TargetProperty="ScaleY" 
																											To="0" 
																											Duration="0:0:0.12" 
																											EasingFunction="{Ease Out, Quad}"/>
										
										<DoubleAnimation Storyboard.TargetName="PART_Scale" 
																											Storyboard.TargetProperty="ScaleX"
																											To="0" 
																											Duration="0:0:0.12" 
																											EasingFunction="{Ease Out, Quad}"/>


										<DoubleAnimation Storyboard.TargetName="PART_ContentScale" 
																											Storyboard.TargetProperty="Y" 
																											To="-8" 
																											Duration="0:0:0.06"
																											EasingFunction="{Ease In, Quad}"/>

										<DoubleAnimation Storyboard.TargetName="PART_HintTranslate" 
																											Storyboard.TargetProperty="Y" 
																											To="-3" 
																											Duration="0:0:0.12" 
																											EasingFunction="{Ease Out, Quad}"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="PART_RootBorder"
														BorderThickness="0 0 0 1"
														BorderBrush="{TemplateBinding BorderBrush}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<Viewbox Height="40" Width="40">
									<!--<Viewbox.Height>
										<Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}" Path="ActualHeight"/>
									</Viewbox.Height>
									<Viewbox.Width>
										<Binding RelativeSource="{RelativeSource Self}" Path="ActualHeight"/>
									</Viewbox.Width>-->
									<Path Style="{StaticResource drawable}"
															Data="{Binding Path=(behaviors:HintAssist.IconGeometry), RelativeSource={RelativeSource TemplatedParent}}" 
															Fill="{TemplateBinding Foreground}"/>
								</Viewbox>
								<ScrollViewer x:Name="PART_ContentHost"
																						Grid.Column="1"
																						Margin="5 2"
																						VerticalScrollBarVisibility="Disabled"
																						HorizontalAlignment="Stretch"
																					 VerticalAlignment="Stretch"
																						HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
																						VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
																						TextElement.FontFamily="{TemplateBinding FontFamily}"
																						TextElement.FontSize="{TemplateBinding FontSize}"	
																						TextElement.FontWeight="{TemplateBinding FontWeight}"
																						TextElement.Foreground="{TemplateBinding Foreground}">
									<ScrollViewer.RenderTransform>
										<TranslateTransform x:Name="PART_ContentScale" X="0" Y="0"/>
									</ScrollViewer.RenderTransform>
								</ScrollViewer>
								<Label x:Name="PART_Hint" 
															Grid.Column="1"
								       HorizontalContentAlignment="Left"
															RenderTransformOrigin="0,0" 
															IsHitTestVisible="False"
															Content="{Binding Path=(behaviors:HintAssist.Hint), RelativeSource={RelativeSource TemplatedParent}}" 
															Foreground="{TemplateBinding Foreground}">
									<Label.Opacity>
										<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(behaviors:HintAssist.HintOpacity)"/>
									</Label.Opacity>
									<Label.RenderTransform>
										<TransformGroup>
											<ScaleTransform x:Name="PART_Scale" ScaleX="1" ScaleY="1"/>
											<TranslateTransform x:Name="PART_HintTranslate"/>
										</TransformGroup>
									</Label.RenderTransform>
								</Label>
								<Rectangle x:Name="PART_FocusRectangle" 
																			Grid.ColumnSpan="2"
																			VerticalAlignment="Bottom"
																			Height="2" 
																			RenderTransformOrigin=".5,.5" 
																			Fill="{StaticResource mtBlue400}">
									<Rectangle.RenderTransform>
										<ScaleTransform ScaleY="1" ScaleX="0"/>
									</Rectangle.RenderTransform>
								</Rectangle>
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="GotFocus">
							<EventTrigger.Actions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_FocusRectangle"
																											Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
																											To="1"
																											Duration="0:0:0.1"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
						<EventTrigger RoutedEvent="LostFocus">
							<EventTrigger.Actions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_FocusRectangle"
																											Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
																											To="0"
																											Duration="0:0:0.1"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	
	<Style TargetType="TextBox" BasedOn="{StaticResource t15pSubhead}" x:Key="HintedRaisedTextBox">
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="Foreground" Value="{StaticResource mtGrey900}"/>
		<Setter Property="CaretBrush" Value="{StaticResource mtBlueGrey800}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup Name="CommonStates">
								<VisualState Name="Normal">
									<Storyboard>

									</Storyboard>
								</VisualState>
								<VisualState Name="MouseOver">
									<Storyboard>

									</Storyboard>
								</VisualState>
								<VisualState Name="Disabled">
									<Storyboard>

									</Storyboard>
								</VisualState>
								<VisualState Name="ReadOnly">
									<Storyboard>

									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup Name="FocusStates">
								<VisualState Name="Focused">
									<Storyboard>

									</Storyboard>
								</VisualState>
								<VisualState Name="Unfocused">
									<Storyboard>

									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<controls:Card>
							<Grid Margin="{TemplateBinding Padding}">
								<ScrollViewer x:Name="PART_ContentHost"
																						Margin="5 2"
																					VerticalScrollBarVisibility="Disabled"
																					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																					TextElement.FontFamily="{TemplateBinding FontFamily}"
																				 TextElement.FontSize="{TemplateBinding FontSize}"	
																					TextElement.FontWeight="{TemplateBinding FontWeight}"
																					TextElement.Foreground="{TemplateBinding Foreground}"/>
								<Label x:Name="PART_hint"
								       HorizontalContentAlignment="Left" 
															IsHitTestVisible="False"
								       Foreground="{TemplateBinding Foreground}">
									<Label.Opacity>
										<Binding Path="(behaviors:HintAssist.HintOpacity)" RelativeSource="{RelativeSource TemplatedParent}" />
									</Label.Opacity>
									<Label.Content>
										<Binding Path="(behaviors:HintAssist.Hint)" RelativeSource="{RelativeSource TemplatedParent}" />
									</Label.Content>
									<Label.Visibility>
										<MultiBinding Converter="{converters:TextBoxHintVisibilityConverter}">
											<Binding Path="Text" RelativeSource="{RelativeSource TemplatedParent}"/>
											<Binding Path="IsKeyboardFocusWithin" RelativeSource="{RelativeSource TemplatedParent}"/>
										</MultiBinding>
									</Label.Visibility>
								</Label>
							</Grid>
						</controls:Card>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="TextBox" BasedOn="{StaticResource t15pSubhead}" x:Key="HintedFlatTextBox">
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="FontSize" Value="18pt"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="Foreground" Value="{StaticResource mtGrey200}"/>
		<Setter Property="CaretBrush" Value="{StaticResource mtBlueGrey800}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid Background="Transparent">
						<ScrollViewer x:Name="PART_ContentHost"
																						Margin="5 2"
																					VerticalScrollBarVisibility="Disabled"
																					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																					TextElement.FontFamily="{TemplateBinding FontFamily}"
																				 TextElement.FontSize="{TemplateBinding FontSize}"	
																					TextElement.FontWeight="{TemplateBinding FontWeight}"
																					TextElement.Foreground="{TemplateBinding Foreground}"/>
						<Label x:Name="PART_hint" 
													HorizontalContentAlignment="Left" 
													IsHitTestVisible="False"
													TextElement.FontFamily="{TemplateBinding FontFamily}"
													TextElement.FontSize="{TemplateBinding FontSize}"	
													TextElement.FontWeight="{TemplateBinding FontWeight}"
													TextElement.Foreground="{TemplateBinding Foreground}">
							<Label.Opacity>
								<Binding Path="(behaviors:HintAssist.HintOpacity)" RelativeSource="{RelativeSource TemplatedParent}" />
							</Label.Opacity>
							<Label.Content>
								<Binding Path="(behaviors:HintAssist.Hint)" RelativeSource="{RelativeSource TemplatedParent}" />
							</Label.Content>
							<Label.Visibility>
								<MultiBinding Converter="{converters:TextBoxHintVisibilityConverter}">
									<Binding Path="Text" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="IsKeyboardFocusWithin" RelativeSource="{RelativeSource TemplatedParent}"/>
								</MultiBinding>
							</Label.Visibility>
						</Label>
						<Rectangle VerticalAlignment="Bottom" 
																	Height="1"
																	Fill="{StaticResource mtGrey400}"/>
						<Rectangle x:Name="PART_FocusRectangle" 
																	VerticalAlignment="Bottom" 
																	Height="2"
																	RenderTransformOrigin=".5,.5" 
																	Fill="{StaticResource mtTealA700}">
							<Rectangle.RenderTransform>
								<ScaleTransform ScaleY="1" ScaleX="0"/>
							</Rectangle.RenderTransform>
						</Rectangle>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="GotFocus">
							<EventTrigger.Actions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_FocusRectangle" 
																											Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
																											To="1" Duration="0:0:0.1"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
						<EventTrigger RoutedEvent="LostFocus">
							<EventTrigger.Actions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_FocusRectangle" 
																											Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
																											To="0" Duration="0:0:0.1"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>