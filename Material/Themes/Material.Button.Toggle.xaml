<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
																				xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:materialControls="clr-namespace:Material.Controls.Primitives"
                    xmlns:ripples="clr-namespace:Material.Controls.Ripples">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Material.Fonts.xaml"/>
		<ResourceDictionary Source="Material.Drawables.xaml"/>
		<ResourceDictionary Source="Material.Button.xaml"/>
		<ResourceDictionary Source="Material.Shadows.xaml"/>
		<ResourceDictionary Source="Material.DefinedBrushes.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<!--Modified version of ButchersBoy's menu toggle theme from the material design toolkit-->
	<Style x:Key="MaterialMenuArrowToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground">
			<Setter.Value>
				<Binding RelativeSource="{RelativeSource AncestorType={x:Type FrameworkElement}}" Path="(TextElement.Foreground)" />
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="materialControls:VisualFeedback.Brush" Value="{StaticResource DarkSurfaceVisualFeedbackBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid x:Name="PART_Root"
												Background="{TemplateBinding Background}"
												ClipToBounds="{TemplateBinding ClipToBounds}">
						<ripples:RippleBinder.Tracker>
							<ripples:NewRippleTracker EventName="MouseDown" />
						</ripples:RippleBinder.Tracker>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="45"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.581"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="4.875"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.875"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-45"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.581"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="4.832"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-2.082"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle1">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.889"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle1">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="canvas">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-180"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle1">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle1">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="canvas">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Canvas>
							<Canvas.RenderTransform>
								<TranslateTransform >
									<ripples:RippleFinal.Placement>
										<MultiBinding Converter="{ripples:DynamicRipplePlacementConverter}">
											<Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
											<Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
											<Binding Path="ActualHeight" ElementName="PART_Ripple"/>
											<Binding Path="(ripples:RippleFinal.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}"/>
										</MultiBinding>
									</ripples:RippleFinal.Placement>
								</TranslateTransform>
							</Canvas.RenderTransform>
							<Ellipse x:Name="PART_Ripple" 
																	RenderTransformOrigin=".5,.5" 
																	VerticalAlignment="Center"
																	HorizontalAlignment="Center"
																	IsHitTestVisible="False">
								<Ellipse.RenderTransform>
									<ScaleTransform ScaleX="0" ScaleY="0"/>
								</Ellipse.RenderTransform>
								<Ellipse.Fill>
									<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(materialControls:VisualFeedback.Brush)"/>
								</Ellipse.Fill>
								<Ellipse.Height>
									<MultiBinding Converter="{ripples:DynamicRippleDiameterConverter}" ConverterParameter="2">
										<Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="(ripples:RippleFinal.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}"/>
									</MultiBinding>
								</Ellipse.Height>
								<Ellipse.Width>
									<Binding RelativeSource="{RelativeSource Self}" Path="ActualHeight" />
								</Ellipse.Width>
							</Ellipse>
						</Canvas>
						<Viewbox x:Name="PART_Content" 
															RenderTransformOrigin=".5,.5" 
															Margin="10 8 10 8">
							<Viewbox.RenderTransform>
								<ScaleTransform ScaleX="1" ScaleY="1"/>
							</Viewbox.RenderTransform>
							<Canvas x:Name="canvas" Width="24" Height="24" RenderTransformOrigin="0.5,0.5">
								<Canvas.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Canvas.RenderTransform>
								<Rectangle x:Name="rectangle" 
																			Fill="{TemplateBinding Foreground}" 
																			Height="2" 
																			Canvas.Left="3"
																			RadiusY="0" 
																			RadiusX="0" 
																			Canvas.Top="6"
																			Width="18"
																			RenderTransformOrigin="0.5,0.5">
									<Rectangle.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</Rectangle.RenderTransform>
								</Rectangle>
								<Rectangle x:Name="rectangle1" 
																			Fill="{TemplateBinding Foreground}"
																			Height="2" 
																			Canvas.Left="3" 
																			RadiusY="0" RadiusX="0" 
																			Canvas.Top="11" 
																			Width="18" 
																			RenderTransformOrigin="0.5,0.5">
									<Rectangle.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</Rectangle.RenderTransform>
								</Rectangle>
								<Rectangle x:Name="rectangle2"
																			Fill="{TemplateBinding Foreground}"
																			Height="2" 
																			Canvas.Left="3" 
																			RadiusY="0" 
																			RadiusX="0"
																			Canvas.Top="16"
																			Width="18" 
																			RenderTransformOrigin="0.5,0.5">
									<Rectangle.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</Rectangle.RenderTransform>
								</Rectangle>
							</Canvas>
						</Viewbox>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Content" 
																											Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
																											To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="PART_Content" 
																											Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
																											To="1.15" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Content" 
																											Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
																											To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="PART_Content" 
																											Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
																											To="1" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Content" 
																											Storyboard.TargetProperty="Opacity" 
																											To="1" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Content" 
																											Storyboard.TargetProperty="Opacity" 
																											To=".4" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="IsHitTestVisible" Value="False"/>
							<Setter TargetName="PART_Content"  Property="Opacity" Value=".4"/>
						</Trigger>
						<EventTrigger RoutedEvent="Click">
							<EventTrigger.Actions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleX" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleY" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWave" Storyboard.TargetProperty="Opacity" 
																		 From="1" To="0" Duration="0:0:.3" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialStarToggleAlt" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<!--<Setter Property="BorderThickness" Value="1"/>-->
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="{TemplateBinding Property=Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation To="1" Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
										<DoubleAnimation To="0" Storyboard.TargetName="lockicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimation To="0" Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
										<DoubleAnimation To="1" Storyboard.TargetName="lockicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid>
							<Grid>
								<Ellipse Name="clickWave" Width="{TemplateBinding ActualHeight}" 
													Height="{TemplateBinding ActualHeight}" 
																	IsHitTestVisible="False"
													RenderTransformOrigin=".5,.5" Fill="{StaticResource mtAmber300}">
									<Ellipse.RenderTransform>
										<ScaleTransform x:Name="clickWaveScale" ScaleX="0" ScaleY="0"/>
									</Ellipse.RenderTransform>
								</Ellipse>
							</Grid>
							<Viewbox Name="lockopenicon" RenderTransformOrigin=".5,.5">
								<Viewbox.RenderTransform>
									<ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
								</Viewbox.RenderTransform>
								<Path Style="{StaticResource drawablestar}" Fill="{StaticResource mtAmber600}"/>
							</Viewbox>
							<Viewbox Name="lockicon"  RenderTransformOrigin=".5,.5">
								<Viewbox.RenderTransform>
									<ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
								</Viewbox.RenderTransform>
								<Path Style="{StaticResource drawablestar_border}" Fill="{TemplateBinding Foreground}"/>
							</Viewbox>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<!--<Setter Property="Effect" Value="{StaticResource MaterialDesignShadowDepth4}" TargetName="icon"/>-->

							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="(RenderTransform).ScaleX" 
																		 To="1.65" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="(RenderTransform).ScaleY" 
																		 To="1.65" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockicon" Storyboard.TargetProperty="(RenderTransform).ScaleX" 
																		 To="1.65" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockicon" Storyboard.TargetProperty="(RenderTransform).ScaleY" 
																		 To="1.65" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="(RenderTransform).ScaleX" 
																		 To="1.5" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="(RenderTransform).ScaleY" 
																		 To="1.5" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockicon" Storyboard.TargetProperty="(RenderTransform).ScaleX" 
																		 To="1.5" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockicon" Storyboard.TargetProperty="(RenderTransform).ScaleY" 
																		 To="1.5" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<EventTrigger RoutedEvent="Click">
							<EventTrigger.Actions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleX" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleY" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWave" Storyboard.TargetProperty="Opacity" 
																		 From="1" To="0" Duration="0:0:.3" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ToggleFavoritesFloatingActionButton" TargetType="ToggleButton">
		<Setter Property="Foreground" Value="{StaticResource mtGrey50}"/>
		<Setter Property="Background" Value="{StaticResource mtTealA700}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Width" Value="64"/>
		<Setter Property="Height" Value="64"/>
		<Setter Property="materialControls:VisualFeedback.Brush" Value="{StaticResource DarkSurfaceVisualFeedbackBrush}"/>
		<!--<Setter Property="materialControls:VisualFeedback.Brush" Value="{StaticResource mtAmberA400}"/>-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid x:Name="PART_Root" ClipToBounds="False">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_StarBorder" 
																											Storyboard.TargetProperty="Opacity" 
																											To="0" Duration="0:0:.15"/>

										<DoubleAnimation Storyboard.TargetName="PART_StarFilled" 
																											Storyboard.TargetProperty="Opacity" 
																											To="1" Duration="0:0:.15"/>

										<ColorAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)" 
																											To="{Binding Source={StaticResource mtAmberA400}, Path=Color}" Duration="0:0:.15"/>


									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_StarFilled" 
																											Storyboard.TargetProperty="Opacity" 
																											To="0" Duration="0:0:.15"/>

										<DoubleAnimation Storyboard.TargetName="PART_StarBorder" 
																											Storyboard.TargetProperty="Opacity" 
																											To="1" Duration="0:0:.15"/>

										<ColorAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)" 
																											To="{Binding Source={StaticResource mtTealA700}, Path=Color}" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ripples:RippleBinder.Tracker>
							<ripples:NewRippleTracker EventName="MouseDown" />
						</ripples:RippleBinder.Tracker>
						<Ellipse x:Name="PART_ButtonEllipse" Fill="{TemplateBinding Background}">
							<Ellipse.Effect>
								<DropShadowEffect BlurRadius="8" ShadowDepth="1.5" Direction="270" 
																									 Color="Black" Opacity=".42"/>
							</Ellipse.Effect>
						</Ellipse>
						<Ellipse IsHitTestVisible="False" x:Name="PART_HoverEllipse">
							<Ellipse.Fill>
								<SolidColorBrush Opacity="0" Color="White"/>
							</Ellipse.Fill>
						</Ellipse>
						<Canvas x:Name="PART_RippleContainer" IsHitTestVisible="False">
							<Canvas.RenderTransform>
								<TranslateTransform>
									<ripples:RippleFinal.Placement>
										<MultiBinding Converter="{ripples:DynamicRipplePlacementConverter}">
											<Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
											<Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
											<Binding Path="ActualHeight" ElementName="PART_Ripple"/>
											<Binding Path="(ripples:RippleFinal.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}"/>
										</MultiBinding>
									</ripples:RippleFinal.Placement>
								</TranslateTransform>
							</Canvas.RenderTransform>
							<Ellipse x:Name="PART_Ripple" RenderTransformOrigin=".5,.5" 
																	VerticalAlignment="Center" HorizontalAlignment="Center"
																	IsHitTestVisible="False">
								<Ellipse.RenderTransform>
									<ScaleTransform ScaleX="0" ScaleY="0"/>
								</Ellipse.RenderTransform>
								<Ellipse.Fill>
									<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(materialControls:VisualFeedback.Brush)"/>
								</Ellipse.Fill>
								<Ellipse.Height>
									<MultiBinding Converter="{ripples:DynamicRippleDiameterConverter}" ConverterParameter="1.5">
										<Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="(ripples:RippleFinal.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}"/>
									</MultiBinding>
								</Ellipse.Height>
								<Ellipse.Width>
									<Binding RelativeSource="{RelativeSource Self}" Path="ActualHeight" />
								</Ellipse.Width>
							</Ellipse>
						</Canvas>


						<Viewbox>
							<ContentControl x:Name="PART_content" 
																										HorizontalAlignment="Center" 
																										VerticalAlignment="Center" 
																										Margin="{TemplateBinding Padding}">
								<ContentControl.Content>
									<Grid>
										<Grid.RenderTransform>
											<RotateTransform Angle="0"/>
										</Grid.RenderTransform>
										<Path x:Name="PART_StarFilled" Opacity="0" Style="{StaticResource drawablestar}"/>
										<Path x:Name="PART_StarBorder" Style="{StaticResource drawablestar_border}"/>
									</Grid>
								</ContentControl.Content>
							</ContentControl>
							<!--<ContentPresenter x:Name="PART_content" 
																										HorizontalAlignment="Center" 
																										VerticalAlignment="Center" 
																										Margin="{TemplateBinding Padding}">
								<ContentPresenter.Content>
									<Canvas>
										<Canvas.RenderTransform>
											<RotateTransform Angle="0"/>
										</Canvas.RenderTransform>
										<Path x:Name="PART_StarFilled" Opacity="0" Style="{StaticResource drawablestar}"/>
										<Path x:Name="PART_StarBorder" Style="{StaticResource drawablestar_border}"/>
									</Canvas>
								</ContentPresenter.Content>
							</ContentPresenter>-->
						</Viewbox>
						<!--<Viewbox 
															HorizontalAlignment="Center" 
															VerticalAlignment="Center" 
															Margin="{TemplateBinding Padding}">
							<Canvas x:Name="PART_content" 
															
															Width="24"
															Height="24">
								<Canvas.RenderTransform>
									<RotateTransform Angle="0"/>
								</Canvas.RenderTransform>
								<Path x:Name="PART_StarFilled" Opacity="0"
														Style="{StaticResource drawablestar}"/>
								<Path x:Name="PART_StarBorder"
														Style="{StaticResource drawablestar_border}"/>	
							</Canvas>
						</Viewbox>-->
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.BlurRadius)" 
																											To="25" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.ShadowDepth)" 
																											To="8" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_HoverEllipse" 
																											Storyboard.TargetProperty="Fill.(SolidColorBrush.Opacity)" 
																											To=".2" Duration="0:0:.1" />

									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.BlurRadius)" 
																											To="8" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.ShadowDepth)" 
																											To="1.5" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_HoverEllipse" 
																											Storyboard.TargetProperty="Fill.(SolidColorBrush.Opacity)" 
																											To=".0" Duration="0:0:.1" />

									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.BlurRadius)" 
																											To="4" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.ShadowDepth)" 
																											To=".5" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_HoverEllipse" 
																											Storyboard.TargetProperty="Fill.(SolidColorBrush.Opacity)" 
																											To="0" Duration="0:0:.1" />

									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.BlurRadius)" 
																											To="8" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.ShadowDepth)" 
																											To="1.5" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_HoverEllipse" 
																											Storyboard.TargetProperty="Fill.(SolidColorBrush.Opacity)" 
																											To="0" Duration="0:0:.1" />

									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

						<EventTrigger RoutedEvent="Click">
							<BeginStoryboard>
								<Storyboard SpeedRatio="1">
									<DoubleAnimation Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" 
																											From="0" To="1" Duration="0:0:0.6" EasingFunction="{Ease Out, Quad}"/>

									<DoubleAnimation Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" 
																											From="0" To="1" Duration="0:0:0.6" EasingFunction="{Ease Out, Quad}"/>

									<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="Opacity">
										<SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.00"/>
										<SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.05"/>
										<SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.60"/>
										<SplineDoubleKeyFrame Value="0" KeyTime="0:0:0.75"/>
									</DoubleAnimationUsingKeyFrames>

								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ToggleRecordFloatingActionButton" TargetType="ToggleButton">
		<Setter Property="Foreground" Value="{StaticResource mtGrey50}"/>
		<Setter Property="Background" Value="{StaticResource mtRedA700}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Width" Value="64"/>
		<Setter Property="Height" Value="64"/>
		<Setter Property="materialControls:VisualFeedback.Brush" Value="{StaticResource DarkSurfaceVisualFeedbackBrush}"/>
		<!--<Setter Property="materialControls:VisualFeedback.Brush" Value="{StaticResource mtAmberA400}"/>-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid x:Name="PART_Root" ClipToBounds="False">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_UncheckedIcon" 
																											Storyboard.TargetProperty="Opacity" 
																											To="0" Duration="0:0:.15"/>

										<DoubleAnimation Storyboard.TargetName="PART_CheckedIcon" 
																											Storyboard.TargetProperty="Opacity" 
																											To="1" Duration="0:0:.15"/>

										<ColorAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																										Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)" 
																										To="{Binding Source={StaticResource mtRedA700}, Path=Color}" Duration="0:0:.15"/>


									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_CheckedIcon" 
																											Storyboard.TargetProperty="Opacity" 
																											To="0" Duration="0:0:.15"/>

										<DoubleAnimation Storyboard.TargetName="PART_UncheckedIcon" 
																											Storyboard.TargetProperty="Opacity" 
																											To="1" Duration="0:0:.15"/>

										<ColorAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																										Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)" 
																										To="{Binding Source={StaticResource mtGrey100}, Path=Color}" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ripples:RippleBinder.Tracker>
							<ripples:NewRippleTracker EventName="MouseDown" />
						</ripples:RippleBinder.Tracker>
						<Ellipse x:Name="PART_ButtonEllipse" Fill="{TemplateBinding Background}">
							<Ellipse.Effect>
								<DropShadowEffect BlurRadius="8" ShadowDepth="1.5" Direction="270" 
																									 Color="Black" Opacity=".42"/>
							</Ellipse.Effect>
						</Ellipse>
						<Ellipse IsHitTestVisible="False" x:Name="PART_HoverEllipse">
							<Ellipse.Fill>
								<SolidColorBrush Opacity="0" Color="White"/>
							</Ellipse.Fill>
						</Ellipse>
						<Canvas x:Name="PART_RippleContainer" IsHitTestVisible="False">
							<Canvas.RenderTransform>
								<TranslateTransform>
									<ripples:RippleFinal.Placement>
										<MultiBinding Converter="{ripples:DynamicRipplePlacementConverter}">
											<Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
											<Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
											<Binding Path="ActualHeight" ElementName="PART_Ripple"/>
											<Binding Path="(ripples:RippleFinal.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}"/>
										</MultiBinding>
									</ripples:RippleFinal.Placement>
								</TranslateTransform>
							</Canvas.RenderTransform>
							<Ellipse x:Name="PART_Ripple" RenderTransformOrigin=".5,.5" 
																	VerticalAlignment="Center" HorizontalAlignment="Center"
																	IsHitTestVisible="False">
								<Ellipse.RenderTransform>
									<ScaleTransform ScaleX="0" ScaleY="0"/>
								</Ellipse.RenderTransform>
								<Ellipse.Fill>
									<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(materialControls:VisualFeedback.Brush)"/>
								</Ellipse.Fill>
								<Ellipse.Height>
									<MultiBinding Converter="{ripples:DynamicRippleDiameterConverter}" ConverterParameter="1.5">
										<Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="(ripples:RippleFinal.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}"/>
									</MultiBinding>
								</Ellipse.Height>
								<Ellipse.Width>
									<Binding RelativeSource="{RelativeSource Self}" Path="ActualHeight" />
								</Ellipse.Width>
							</Ellipse>
						</Canvas>


						<Viewbox>
							<ContentControl x:Name="PART_content" 
																							HorizontalAlignment="Center" 
																							VerticalAlignment="Center" 
																							Margin="{TemplateBinding Padding}">
								<ContentControl.Content>
									<Grid>
										<Grid.RenderTransform>
											<RotateTransform Angle="0"/>
										</Grid.RenderTransform>
										<Path x:Name="PART_CheckedIcon" 
																Opacity="0"
																Style="{StaticResource drawablepause_circle_outline}"/>
										<Path x:Name="PART_UncheckedIcon"
																Fill="{StaticResource mtRed400}"
																Style="{StaticResource drawableradio_button_checked}"/>
									</Grid>
								</ContentControl.Content>
							</ContentControl>
						</Viewbox>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.BlurRadius)" 
																											To="25" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.ShadowDepth)" 
																											To="8" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_HoverEllipse" 
																											Storyboard.TargetProperty="Fill.(SolidColorBrush.Opacity)" 
																											To=".2" Duration="0:0:.1" />

									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.BlurRadius)" 
																											To="8" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.ShadowDepth)" 
																											To="1.5" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_HoverEllipse" 
																											Storyboard.TargetProperty="Fill.(SolidColorBrush.Opacity)" 
																											To=".0" Duration="0:0:.1" />

									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.BlurRadius)" 
																											To="4" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.ShadowDepth)" 
																											To=".5" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_HoverEllipse" 
																											Storyboard.TargetProperty="Fill.(SolidColorBrush.Opacity)" 
																											To="0" Duration="0:0:.1" />

									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.BlurRadius)" 
																											To="8" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_ButtonEllipse" 
																											Storyboard.TargetProperty="Effect.(DropShadowEffect.ShadowDepth)" 
																											To="1.5" Duration="0:0:0.2"/>

										<DoubleAnimation Storyboard.TargetName="PART_HoverEllipse" 
																											Storyboard.TargetProperty="Fill.(SolidColorBrush.Opacity)" 
																											To="0" Duration="0:0:.1" />

									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

						<EventTrigger RoutedEvent="Click">
							<BeginStoryboard>
								<Storyboard SpeedRatio="1">
									<DoubleAnimation Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" 
																											From="0" To="1" Duration="0:0:0.6" EasingFunction="{Ease Out, Quad}"/>

									<DoubleAnimation Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" 
																											From="0" To="1" Duration="0:0:0.6" EasingFunction="{Ease Out, Quad}"/>

									<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ripple" Storyboard.TargetProperty="Opacity">
										<SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.00"/>
										<SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.05"/>
										<SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.60"/>
										<SplineDoubleKeyFrame Value="0" KeyTime="0:0:0.75"/>
									</DoubleAnimationUsingKeyFrames>

								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--<Style x:Key="MaterialStarToggle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="{TemplateBinding Property=Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation To="1" Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
										<DoubleAnimation To="0" Storyboard.TargetName="lockicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimation To="0" Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
										<DoubleAnimation To="1" Storyboard.TargetName="lockicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid ClipToBounds="True">
							<Grid>
								<Ellipse Name="clickWave" Width="{TemplateBinding ActualHeight}" 
													Height="{TemplateBinding ActualHeight}" 
																	IsHitTestVisible="False"
													RenderTransformOrigin=".5,.5">
									<Ellipse.Fill>
										<MultiBinding Converter="{StaticResource l2bc}">
											<Binding Path="(materialControls:ThemePrimitive.Theme)"/>
											<Binding Path="(materialControls:VisualFeedback.ClickFeedback)"/>
										</MultiBinding>
									</Ellipse.Fill>
									<Ellipse.RenderTransform>
										<ScaleTransform x:Name="clickWaveScale" ScaleX="0" ScaleY="0"/>
									</Ellipse.RenderTransform>
								</Ellipse>
							</Grid>
							<Viewbox Name="lockopenicon" RenderTransformOrigin=".5,.5">
								<Viewbox.RenderTransform>
									<ScaleTransform ScaleX="1" ScaleY="1"/>
								</Viewbox.RenderTransform>
								<Path Style="{StaticResource drawablestar}" Fill="{StaticResource mtAmber500}"/>
							</Viewbox>
							<Viewbox Name="lockicon"  RenderTransformOrigin=".5,.5">
								<Viewbox.RenderTransform>
									<ScaleTransform ScaleX="1" ScaleY="1"/>
								</Viewbox.RenderTransform>
								<Path Style="{StaticResource drawablestar_border}" Fill="{TemplateBinding Foreground}"/>
							</Viewbox>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							-->
	<!--<Setter Property="Effect" Value="{StaticResource MaterialDesignShadowDepth4}" TargetName="icon"/>-->
	<!--
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="(RenderTransform).ScaleX" 
																		 To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="(RenderTransform).ScaleY" 
																		 To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockicon" Storyboard.TargetProperty="(RenderTransform).ScaleX" 
																		 To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockicon" Storyboard.TargetProperty="(RenderTransform).ScaleY" 
																		 To="1.15" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="(RenderTransform).ScaleX" 
																		 To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="(RenderTransform).ScaleY" 
																		 To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockicon" Storyboard.TargetProperty="(RenderTransform).ScaleX" 
																		 To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockicon" Storyboard.TargetProperty="(RenderTransform).ScaleY" 
																		 To="1" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<EventTrigger RoutedEvent="Click">
							<EventTrigger.Actions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleX" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleY" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWave" Storyboard.TargetProperty="Opacity" 
																		 From="1" To="0" Duration="0:0:.3" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialPMToggle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		-->
	<!--<Setter Property="BorderThickness" Value="1"/>-->
	<!--
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="{TemplateBinding Property=Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation To="1" Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
										<DoubleAnimation To="0" Storyboard.TargetName="lockicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimation To="0" Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
										<DoubleAnimation To="1" Storyboard.TargetName="lockicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid>
							<Grid>
								<Ellipse Name="clickWave" Width="{TemplateBinding ActualHeight}" 
													Height="{TemplateBinding ActualHeight}" 
																	IsHitTestVisible="False"
													RenderTransformOrigin=".5,.5" Fill="{StaticResource mtTeal300}">
									<Ellipse.RenderTransform>
										<ScaleTransform x:Name="clickWaveScale" ScaleX="0" ScaleY="0"/>
									</Ellipse.RenderTransform>
								</Ellipse>
							</Grid>
							<Viewbox Name="lockopenicon" RenderTransformOrigin=".5,.5" Margin="6">
								<Viewbox.RenderTransform>
									<ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
								</Viewbox.RenderTransform>
								<Label Content="PM" Foreground="{StaticResource mtTeal500}" FontWeight="Medium"/>
								-->
	<!--<Path Style="{StaticResource drawablesettings}" Fill="{StaticResource mtTeal500}"/>-->
	<!--
							</Viewbox>
							<Viewbox Name="lockicon"  RenderTransformOrigin=".5,.5" Margin="6">
								<Viewbox.RenderTransform>
									<ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
								</Viewbox.RenderTransform>
								<Label Content="PM" Foreground="{TemplateBinding Foreground}"/>
								-->
	<!--<Path Style="{StaticResource drawablesettings}" Fill="{TemplateBinding Foreground}"/>-->
	<!--
							</Viewbox>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							-->
	<!--<Setter Property="Effect" Value="{StaticResource MaterialDesignShadowDepth4}" TargetName="icon"/>-->
	<!--
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="(RenderTransform).ScaleX" 
																		 To="1.65" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="(RenderTransform).ScaleY" 
																		 To="1.65" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockicon" Storyboard.TargetProperty="(RenderTransform).ScaleX" 
																		 To="1.65" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockicon" Storyboard.TargetProperty="(RenderTransform).ScaleY" 
																		 To="1.65" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="(RenderTransform).ScaleX" 
																		 To="1.5" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="(RenderTransform).ScaleY" 
																		 To="1.5" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockicon" Storyboard.TargetProperty="(RenderTransform).ScaleX" 
																		 To="1.5" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockicon" Storyboard.TargetProperty="(RenderTransform).ScaleY" 
																		 To="1.5" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<EventTrigger RoutedEvent="Click">
							<EventTrigger.Actions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleX" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleY" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWave" Storyboard.TargetProperty="Opacity" 
																		 From="1" To="0" Duration="0:0:.3" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>-->

</ResourceDictionary>