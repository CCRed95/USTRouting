<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialControls="clr-namespace:Material.Controls.Primitives"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ripples="clr-namespace:Material.Controls.Ripples"
                    xmlns:behaviors="clr-namespace:Material.Controls.Behaviors">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Material.Drawables.xaml"/>
		<ResourceDictionary Source="Material.DefinedBrushes.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	<Style TargetType="CheckBox">
		<Setter Property="Foreground">
			<Setter.Value>
				<Binding RelativeSource="{RelativeSource AncestorType={x:Type FrameworkElement}}" Path="(TextElement.Foreground)" />
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid ClipToBounds="{TemplateBinding ClipToBounds}">
						<ripples:RippleBinder.Tracker>
							<ripples:NewRippleTracker EventName="MouseDown" />
						</ripples:RippleBinder.Tracker>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation To="1" Storyboard.TargetName="PART_CheckedIcon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
										<DoubleAnimation To="0" Storyboard.TargetName="PART_UncheckedIcon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimation To="0" Storyboard.TargetName="PART_CheckedIcon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
										<DoubleAnimation To="1" Storyboard.TargetName="PART_UncheckedIcon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Canvas>
							<Canvas.RenderTransform>
								<TranslateTransform >
									<ripples:RippleFinal.Placement>
										<MultiBinding Converter="{ripples:DynamicRipplePlacementConverter}">
											<Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
											<Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
											<Binding Path="ActualHeight" ElementName="PART_Ripple"/>
											<Binding Path="(ripples:RippleFinal.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}"/>
										</MultiBinding>
									</ripples:RippleFinal.Placement>
								</TranslateTransform>
							</Canvas.RenderTransform>
							<Ellipse x:Name="PART_Ripple" 
																	RenderTransformOrigin=".5,.5" 
																	VerticalAlignment="Center"
																	HorizontalAlignment="Center"
																	IsHitTestVisible="False">
								<Ellipse.RenderTransform>
									<ScaleTransform ScaleX="0" ScaleY="0"/>
								</Ellipse.RenderTransform>
								<Ellipse.Fill>
									<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(materialControls:VisualFeedback.Brush)"/>
								</Ellipse.Fill>
								<Ellipse.Height>
									<MultiBinding Converter="{ripples:DynamicRippleDiameterConverter}" ConverterParameter="2">
										<Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="(ripples:RippleFinal.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}"/>
									</MultiBinding>
								</Ellipse.Height>
								<Ellipse.Width>
									<Binding RelativeSource="{RelativeSource Self}" Path="ActualHeight" />
								</Ellipse.Width>
							</Ellipse>
						</Canvas>
						<Viewbox RenderTransformOrigin=".5,.5">
							<Viewbox.RenderTransform>
								<TransformGroup>
									<ScaleTransform>
										<ScaleTransform.ScaleY>
											<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(behaviors:IconAssist.Scale)"/>
										</ScaleTransform.ScaleY>
										<ScaleTransform.ScaleX>
											<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(behaviors:IconAssist.Scale)"/>
										</ScaleTransform.ScaleX>
									</ScaleTransform>
									<RotateTransform>
										<RotateTransform.Angle>
											<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(behaviors:IconAssist.Rotation)"/>
										</RotateTransform.Angle>
									</RotateTransform>
								</TransformGroup>
							</Viewbox.RenderTransform>
							<Grid x:Name="PART_Content">
								<Path x:Name="PART_CheckedIcon" 
														Style="{StaticResource drawablecheckbox_marked_outline}" 
														Fill="{TemplateBinding Foreground}"/>

								<Path  x:Name="PART_UncheckedIcon" 
															Style="{StaticResource drawablecheck_box_outline_blank}" 
															Fill="{TemplateBinding Foreground}"/>
							</Grid>
						</Viewbox>

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Content" 
																											Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
																											To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="PART_Content" 
																											Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
																											To="1.15" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Content" 
																											Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
																											To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="PART_Content" 
																											Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
																											To="1" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Content" 
																											Storyboard.TargetProperty="Opacity" 
																											To="1" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Content" 
																											Storyboard.TargetProperty="Opacity" 
																											To=".4" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="IsHitTestVisible" Value="False"/>
							<Setter TargetName="PART_Content"  Property="Opacity" Value=".4"/>
						</Trigger>
						<EventTrigger RoutedEvent="Click">
							<BeginStoryboard>
								<Storyboard SpeedRatio="2">
									<DoubleAnimation Storyboard.TargetName="PART_Ripple"
																										Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
																										From="0" To=".6"
																										Duration="0:0:0.75" 
																										EasingFunction="{Ease Out, Quad}"/>

									<DoubleAnimation Storyboard.TargetName="PART_Ripple"
																										Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
																										From="0" To=".6"
																										Duration="0:0:0.75" 
																										EasingFunction="{Ease Out, Quad}"/>

									<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ripple" 
																																								Storyboard.TargetProperty="Opacity">
										<SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.00"/>
										<SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.10"/>
										<SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.60"/>
										<SplineDoubleKeyFrame Value="0" KeyTime="0:0:0.75"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>