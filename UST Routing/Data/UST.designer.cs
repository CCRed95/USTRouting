#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UST_Routing.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="USTRouting")]
	public partial class USTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAssignedJob(UST_Routing.Data.Domain.AssignedJob instance);
    partial void UpdateAssignedJob(UST_Routing.Data.Domain.AssignedJob instance);
    partial void DeleteAssignedJob(UST_Routing.Data.Domain.AssignedJob instance);
    partial void InsertUserAccount(UST_Routing.Data.Domain.UserAccount instance);
    partial void UpdateUserAccount(UST_Routing.Data.Domain.UserAccount instance);
    partial void DeleteUserAccount(UST_Routing.Data.Domain.UserAccount instance);
    partial void InsertCity(UST_Routing.Data.Domain.City instance);
    partial void UpdateCity(UST_Routing.Data.Domain.City instance);
    partial void DeleteCity(UST_Routing.Data.Domain.City instance);
    partial void InsertJobAssignmentCheckpoint(UST_Routing.Data.Domain.JobAssignmentCheckpoint instance);
    partial void UpdateJobAssignmentCheckpoint(UST_Routing.Data.Domain.JobAssignmentCheckpoint instance);
    partial void DeleteJobAssignmentCheckpoint(UST_Routing.Data.Domain.JobAssignmentCheckpoint instance);
    partial void InsertJobAssignmentGroup(UST_Routing.Data.Domain.JobAssignmentGroup instance);
    partial void UpdateJobAssignmentGroup(UST_Routing.Data.Domain.JobAssignmentGroup instance);
    partial void DeleteJobAssignmentGroup(UST_Routing.Data.Domain.JobAssignmentGroup instance);
    partial void InsertJobAssignment(UST_Routing.Data.Domain.JobAssignment instance);
    partial void UpdateJobAssignment(UST_Routing.Data.Domain.JobAssignment instance);
    partial void DeleteJobAssignment(UST_Routing.Data.Domain.JobAssignment instance);
    partial void InsertStore(UST_Routing.Data.Domain.Store instance);
    partial void UpdateStore(UST_Routing.Data.Domain.Store instance);
    partial void DeleteStore(UST_Routing.Data.Domain.Store instance);
    #endregion
		
		public USTDataContext() : 
				base(global::UST_Routing.Properties.Settings.Default.USTRoutingConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public USTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public USTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public USTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public USTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UST_Routing.Data.Domain.AssignedJob> AssignedJobs
		{
			get
			{
				return this.GetTable<UST_Routing.Data.Domain.AssignedJob>();
			}
		}
		
		public System.Data.Linq.Table<UST_Routing.Data.Domain.UserAccount> UserAccounts
		{
			get
			{
				return this.GetTable<UST_Routing.Data.Domain.UserAccount>();
			}
		}
		
		public System.Data.Linq.Table<UST_Routing.Data.Domain.City> Cities
		{
			get
			{
				return this.GetTable<UST_Routing.Data.Domain.City>();
			}
		}
		
		public System.Data.Linq.Table<UST_Routing.Data.Domain.JobAssignmentCheckpoint> JobAssignmentCheckpoints
		{
			get
			{
				return this.GetTable<UST_Routing.Data.Domain.JobAssignmentCheckpoint>();
			}
		}
		
		public System.Data.Linq.Table<UST_Routing.Data.Domain.JobAssignmentGroup> JobAssignmentGroups
		{
			get
			{
				return this.GetTable<UST_Routing.Data.Domain.JobAssignmentGroup>();
			}
		}
		
		public System.Data.Linq.Table<UST_Routing.Data.Domain.JobAssignment> JobAssignments
		{
			get
			{
				return this.GetTable<UST_Routing.Data.Domain.JobAssignment>();
			}
		}
		
		public System.Data.Linq.Table<UST_Routing.Data.Domain.Store> Stores
		{
			get
			{
				return this.GetTable<UST_Routing.Data.Domain.Store>();
			}
		}
	}
}
namespace UST_Routing.Data.Domain
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssignedJobs")]
	public partial class AssignedJob : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobID;
		
		private int _DestinationCityID;
		
		private System.DateTime _Deadline;
		
		private int _CurrentDailyTeamCount;
		
		private System.Nullable<int> _FlexTeam;
		
		private string _State;
		
		private System.Nullable<long> _Latitude;
		
		private System.Nullable<long> _Longitude;
		
		private System.Nullable<int> _TimeZoneOffset;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobIDChanging(int value);
    partial void OnJobIDChanged();
    partial void OnDestinationCityIDChanging(int value);
    partial void OnDestinationCityIDChanged();
    partial void OnDeadlineChanging(System.DateTime value);
    partial void OnDeadlineChanged();
    partial void OnCurrentDailyTeamCountChanging(int value);
    partial void OnCurrentDailyTeamCountChanged();
    partial void OnFlexTeamChanging(System.Nullable<int> value);
    partial void OnFlexTeamChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnLatitudeChanging(System.Nullable<long> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<long> value);
    partial void OnLongitudeChanged();
    partial void OnTimeZoneOffsetChanging(System.Nullable<int> value);
    partial void OnTimeZoneOffsetChanged();
    #endregion
		
		public AssignedJob()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationCityID", DbType="Int NOT NULL")]
		public int DestinationCityID
		{
			get
			{
				return this._DestinationCityID;
			}
			set
			{
				if ((this._DestinationCityID != value))
				{
					this.OnDestinationCityIDChanging(value);
					this.SendPropertyChanging();
					this._DestinationCityID = value;
					this.SendPropertyChanged("DestinationCityID");
					this.OnDestinationCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deadline", DbType="DateTime2 NOT NULL")]
		public System.DateTime Deadline
		{
			get
			{
				return this._Deadline;
			}
			set
			{
				if ((this._Deadline != value))
				{
					this.OnDeadlineChanging(value);
					this.SendPropertyChanging();
					this._Deadline = value;
					this.SendPropertyChanged("Deadline");
					this.OnDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentDailyTeamCount", DbType="Int NOT NULL")]
		public int CurrentDailyTeamCount
		{
			get
			{
				return this._CurrentDailyTeamCount;
			}
			set
			{
				if ((this._CurrentDailyTeamCount != value))
				{
					this.OnCurrentDailyTeamCountChanging(value);
					this.SendPropertyChanging();
					this._CurrentDailyTeamCount = value;
					this.SendPropertyChanged("CurrentDailyTeamCount");
					this.OnCurrentDailyTeamCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlexTeam", DbType="Int")]
		public System.Nullable<int> FlexTeam
		{
			get
			{
				return this._FlexTeam;
			}
			set
			{
				if ((this._FlexTeam != value))
				{
					this.OnFlexTeamChanging(value);
					this.SendPropertyChanging();
					this._FlexTeam = value;
					this.SendPropertyChanged("FlexTeam");
					this.OnFlexTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(30)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="BigInt")]
		public System.Nullable<long> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="BigInt")]
		public System.Nullable<long> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneOffset", DbType="Int")]
		public System.Nullable<int> TimeZoneOffset
		{
			get
			{
				return this._TimeZoneOffset;
			}
			set
			{
				if ((this._TimeZoneOffset != value))
				{
					this.OnTimeZoneOffsetChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneOffset = value;
					this.SendPropertyChanged("TimeZoneOffset");
					this.OnTimeZoneOffsetChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAccounts")]
	public partial class UserAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserAccountID;
		
		private string _Username;
		
		private string _EmailAddress;
		
		private string _Password;
		
		private int _AccountType;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _JobTitle;
		
		private System.DateTime _Created;
		
		private string _ImagePath;
		
		private EntitySet<JobAssignmentGroup> _JobAssignmentGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAccountIDChanging(int value);
    partial void OnUserAccountIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAccountTypeChanging(int value);
    partial void OnAccountTypeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    #endregion
		
		public UserAccount()
		{
			this._JobAssignmentGroups = new EntitySet<JobAssignmentGroup>(new Action<JobAssignmentGroup>(this.attach_JobAssignmentGroups), new Action<JobAssignmentGroup>(this.detach_JobAssignmentGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserAccountID
		{
			get
			{
				return this._UserAccountID;
			}
			set
			{
				if ((this._UserAccountID != value))
				{
					this.OnUserAccountIDChanging(value);
					this.SendPropertyChanging();
					this._UserAccountID = value;
					this.SendPropertyChanged("UserAccountID");
					this.OnUserAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="Int NOT NULL")]
		public int AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="VarChar(30)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="VarChar(400)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccount_JobAssignmentGroup", Storage="_JobAssignmentGroups", ThisKey="UserAccountID", OtherKey="AssociatedAccountID")]
		public EntitySet<JobAssignmentGroup> JobAssignmentGroups
		{
			get
			{
				return this._JobAssignmentGroups;
			}
			set
			{
				this._JobAssignmentGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobAssignmentGroups(JobAssignmentGroup entity)
		{
			this.SendPropertyChanging();
			entity.UserAccount = this;
		}
		
		private void detach_JobAssignmentGroups(JobAssignmentGroup entity)
		{
			this.SendPropertyChanging();
			entity.UserAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cities")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityID;
		
		private string _CityName;
		
		private string _ImagePath;
		
		private int _LegacyLocationID;
		
		private string _LegacyLocationMoniker;
		
		private string _State;
		
		private System.Nullable<long> _Latitude;
		
		private System.Nullable<long> _Longitude;
		
		private System.Nullable<int> _TimeZoneOffset;
		
		private bool _Inferred;
		
		private EntitySet<JobAssignment> _JobAssignments;
		
		private EntitySet<Store> _Stores;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnLegacyLocationIDChanging(int value);
    partial void OnLegacyLocationIDChanged();
    partial void OnLegacyLocationMonikerChanging(string value);
    partial void OnLegacyLocationMonikerChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnLatitudeChanging(System.Nullable<long> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<long> value);
    partial void OnLongitudeChanged();
    partial void OnTimeZoneOffsetChanging(System.Nullable<int> value);
    partial void OnTimeZoneOffsetChanged();
    partial void OnInferredChanging(bool value);
    partial void OnInferredChanged();
    #endregion
		
		public City()
		{
			this._JobAssignments = new EntitySet<JobAssignment>(new Action<JobAssignment>(this.attach_JobAssignments), new Action<JobAssignment>(this.detach_JobAssignments));
			this._Stores = new EntitySet<Store>(new Action<Store>(this.attach_Stores), new Action<Store>(this.detach_Stores));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="VarChar(400) NOT NULL", CanBeNull=false)]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegacyLocationID", DbType="Int NOT NULL")]
		public int LegacyLocationID
		{
			get
			{
				return this._LegacyLocationID;
			}
			set
			{
				if ((this._LegacyLocationID != value))
				{
					this.OnLegacyLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LegacyLocationID = value;
					this.SendPropertyChanged("LegacyLocationID");
					this.OnLegacyLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegacyLocationMoniker", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string LegacyLocationMoniker
		{
			get
			{
				return this._LegacyLocationMoniker;
			}
			set
			{
				if ((this._LegacyLocationMoniker != value))
				{
					this.OnLegacyLocationMonikerChanging(value);
					this.SendPropertyChanging();
					this._LegacyLocationMoniker = value;
					this.SendPropertyChanged("LegacyLocationMoniker");
					this.OnLegacyLocationMonikerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(30)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="BigInt")]
		public System.Nullable<long> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="BigInt")]
		public System.Nullable<long> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneOffset", DbType="Int")]
		public System.Nullable<int> TimeZoneOffset
		{
			get
			{
				return this._TimeZoneOffset;
			}
			set
			{
				if ((this._TimeZoneOffset != value))
				{
					this.OnTimeZoneOffsetChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneOffset = value;
					this.SendPropertyChanged("TimeZoneOffset");
					this.OnTimeZoneOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inferred", DbType="Bit NOT NULL")]
		public bool Inferred
		{
			get
			{
				return this._Inferred;
			}
			set
			{
				if ((this._Inferred != value))
				{
					this.OnInferredChanging(value);
					this.SendPropertyChanging();
					this._Inferred = value;
					this.SendPropertyChanged("Inferred");
					this.OnInferredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_JobAssignment", Storage="_JobAssignments", ThisKey="CityID", OtherKey="AssociatedCityID")]
		public EntitySet<JobAssignment> JobAssignments
		{
			get
			{
				return this._JobAssignments;
			}
			set
			{
				this._JobAssignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Store", Storage="_Stores", ThisKey="CityID", OtherKey="AssociatedCityID")]
		public EntitySet<Store> Stores
		{
			get
			{
				return this._Stores;
			}
			set
			{
				this._Stores.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobAssignments(JobAssignment entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_JobAssignments(JobAssignment entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_Stores(Store entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Stores(Store entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobAssignmentCheckpoints")]
	public partial class JobAssignmentCheckpoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobAssignmentCheckpointID;
		
		private int _AssociatedJobAssignmentID;
		
		private int _CheckPointType;
		
		private System.DateTime _CheckpointDeadline;
		
		private EntityRef<JobAssignment> _JobAssignment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobAssignmentCheckpointIDChanging(int value);
    partial void OnJobAssignmentCheckpointIDChanged();
    partial void OnAssociatedJobAssignmentIDChanging(int value);
    partial void OnAssociatedJobAssignmentIDChanged();
    partial void OnCheckPointTypeChanging(int value);
    partial void OnCheckPointTypeChanged();
    partial void OnCheckpointDeadlineChanging(System.DateTime value);
    partial void OnCheckpointDeadlineChanged();
    #endregion
		
		public JobAssignmentCheckpoint()
		{
			this._JobAssignment = default(EntityRef<JobAssignment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobAssignmentCheckpointID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobAssignmentCheckpointID
		{
			get
			{
				return this._JobAssignmentCheckpointID;
			}
			set
			{
				if ((this._JobAssignmentCheckpointID != value))
				{
					this.OnJobAssignmentCheckpointIDChanging(value);
					this.SendPropertyChanging();
					this._JobAssignmentCheckpointID = value;
					this.SendPropertyChanged("JobAssignmentCheckpointID");
					this.OnJobAssignmentCheckpointIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociatedJobAssignmentID", DbType="Int NOT NULL")]
		public int AssociatedJobAssignmentID
		{
			get
			{
				return this._AssociatedJobAssignmentID;
			}
			set
			{
				if ((this._AssociatedJobAssignmentID != value))
				{
					if (this._JobAssignment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssociatedJobAssignmentIDChanging(value);
					this.SendPropertyChanging();
					this._AssociatedJobAssignmentID = value;
					this.SendPropertyChanged("AssociatedJobAssignmentID");
					this.OnAssociatedJobAssignmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPointType", DbType="Int NOT NULL")]
		public int CheckPointType
		{
			get
			{
				return this._CheckPointType;
			}
			set
			{
				if ((this._CheckPointType != value))
				{
					this.OnCheckPointTypeChanging(value);
					this.SendPropertyChanging();
					this._CheckPointType = value;
					this.SendPropertyChanged("CheckPointType");
					this.OnCheckPointTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckpointDeadline", DbType="DateTime2 NOT NULL")]
		public System.DateTime CheckpointDeadline
		{
			get
			{
				return this._CheckpointDeadline;
			}
			set
			{
				if ((this._CheckpointDeadline != value))
				{
					this.OnCheckpointDeadlineChanging(value);
					this.SendPropertyChanging();
					this._CheckpointDeadline = value;
					this.SendPropertyChanged("CheckpointDeadline");
					this.OnCheckpointDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobAssignment_JobAssignmentCheckpoint", Storage="_JobAssignment", ThisKey="AssociatedJobAssignmentID", OtherKey="JobAssignmentID", IsForeignKey=true)]
		public JobAssignment JobAssignment
		{
			get
			{
				return this._JobAssignment.Entity;
			}
			set
			{
				JobAssignment previousValue = this._JobAssignment.Entity;
				if (((previousValue != value) 
							|| (this._JobAssignment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobAssignment.Entity = null;
						previousValue.JobAssignmentCheckpoints.Remove(this);
					}
					this._JobAssignment.Entity = value;
					if ((value != null))
					{
						value.JobAssignmentCheckpoints.Add(this);
						this._AssociatedJobAssignmentID = value.JobAssignmentID;
					}
					else
					{
						this._AssociatedJobAssignmentID = default(int);
					}
					this.SendPropertyChanged("JobAssignment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobAssignmentGroups")]
	public partial class JobAssignmentGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AssignmentGroupID;
		
		private int _AssociatedAccountID;
		
		private EntitySet<JobAssignment> _JobAssignments;
		
		private EntityRef<UserAccount> _UserAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssignmentGroupIDChanging(int value);
    partial void OnAssignmentGroupIDChanged();
    partial void OnAssociatedAccountIDChanging(int value);
    partial void OnAssociatedAccountIDChanged();
    #endregion
		
		public JobAssignmentGroup()
		{
			this._JobAssignments = new EntitySet<JobAssignment>(new Action<JobAssignment>(this.attach_JobAssignments), new Action<JobAssignment>(this.detach_JobAssignments));
			this._UserAccount = default(EntityRef<UserAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AssignmentGroupID
		{
			get
			{
				return this._AssignmentGroupID;
			}
			set
			{
				if ((this._AssignmentGroupID != value))
				{
					this.OnAssignmentGroupIDChanging(value);
					this.SendPropertyChanging();
					this._AssignmentGroupID = value;
					this.SendPropertyChanged("AssignmentGroupID");
					this.OnAssignmentGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociatedAccountID", DbType="Int NOT NULL")]
		public int AssociatedAccountID
		{
			get
			{
				return this._AssociatedAccountID;
			}
			set
			{
				if ((this._AssociatedAccountID != value))
				{
					if (this._UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssociatedAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AssociatedAccountID = value;
					this.SendPropertyChanged("AssociatedAccountID");
					this.OnAssociatedAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobAssignmentGroup_JobAssignment", Storage="_JobAssignments", ThisKey="AssignmentGroupID", OtherKey="JobAssignmentGroupMemberID")]
		public EntitySet<JobAssignment> JobAssignments
		{
			get
			{
				return this._JobAssignments;
			}
			set
			{
				this._JobAssignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccount_JobAssignmentGroup", Storage="_UserAccount", ThisKey="AssociatedAccountID", OtherKey="UserAccountID", IsForeignKey=true)]
		public UserAccount UserAccount
		{
			get
			{
				return this._UserAccount.Entity;
			}
			set
			{
				UserAccount previousValue = this._UserAccount.Entity;
				if (((previousValue != value) 
							|| (this._UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAccount.Entity = null;
						previousValue.JobAssignmentGroups.Remove(this);
					}
					this._UserAccount.Entity = value;
					if ((value != null))
					{
						value.JobAssignmentGroups.Add(this);
						this._AssociatedAccountID = value.UserAccountID;
					}
					else
					{
						this._AssociatedAccountID = default(int);
					}
					this.SendPropertyChanged("UserAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobAssignments(JobAssignment entity)
		{
			this.SendPropertyChanging();
			entity.JobAssignmentGroup = this;
		}
		
		private void detach_JobAssignments(JobAssignment entity)
		{
			this.SendPropertyChanging();
			entity.JobAssignmentGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobAssignments")]
	public partial class JobAssignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobAssignmentID;
		
		private int _JobAssignmentGroupMemberID;
		
		private int _AssociatedCityID;
		
		private System.DateTime _Deadline;
		
		private int _CurrentDailyTeamCount;
		
		private int _FlexTeams;
		
		private bool _HasStores;
		
		private bool _IsAutoInput;
		
		private bool _IsSoftRoute;
		
		private string _Notes;
		
		private EntitySet<JobAssignmentCheckpoint> _JobAssignmentCheckpoints;
		
		private EntityRef<City> _City;
		
		private EntityRef<JobAssignmentGroup> _JobAssignmentGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobAssignmentIDChanging(int value);
    partial void OnJobAssignmentIDChanged();
    partial void OnJobAssignmentGroupMemberIDChanging(int value);
    partial void OnJobAssignmentGroupMemberIDChanged();
    partial void OnAssociatedCityIDChanging(int value);
    partial void OnAssociatedCityIDChanged();
    partial void OnDeadlineChanging(System.DateTime value);
    partial void OnDeadlineChanged();
    partial void OnCurrentDailyTeamCountChanging(int value);
    partial void OnCurrentDailyTeamCountChanged();
    partial void OnFlexTeamsChanging(int value);
    partial void OnFlexTeamsChanged();
    partial void OnHasStoresChanging(bool value);
    partial void OnHasStoresChanged();
    partial void OnIsAutoInputChanging(bool value);
    partial void OnIsAutoInputChanged();
    partial void OnIsSoftRouteChanging(bool value);
    partial void OnIsSoftRouteChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public JobAssignment()
		{
			this._JobAssignmentCheckpoints = new EntitySet<JobAssignmentCheckpoint>(new Action<JobAssignmentCheckpoint>(this.attach_JobAssignmentCheckpoints), new Action<JobAssignmentCheckpoint>(this.detach_JobAssignmentCheckpoints));
			this._City = default(EntityRef<City>);
			this._JobAssignmentGroup = default(EntityRef<JobAssignmentGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobAssignmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobAssignmentID
		{
			get
			{
				return this._JobAssignmentID;
			}
			set
			{
				if ((this._JobAssignmentID != value))
				{
					this.OnJobAssignmentIDChanging(value);
					this.SendPropertyChanging();
					this._JobAssignmentID = value;
					this.SendPropertyChanged("JobAssignmentID");
					this.OnJobAssignmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobAssignmentGroupMemberID", DbType="Int NOT NULL")]
		public int JobAssignmentGroupMemberID
		{
			get
			{
				return this._JobAssignmentGroupMemberID;
			}
			set
			{
				if ((this._JobAssignmentGroupMemberID != value))
				{
					if (this._JobAssignmentGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobAssignmentGroupMemberIDChanging(value);
					this.SendPropertyChanging();
					this._JobAssignmentGroupMemberID = value;
					this.SendPropertyChanged("JobAssignmentGroupMemberID");
					this.OnJobAssignmentGroupMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociatedCityID", DbType="Int NOT NULL")]
		public int AssociatedCityID
		{
			get
			{
				return this._AssociatedCityID;
			}
			set
			{
				if ((this._AssociatedCityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssociatedCityIDChanging(value);
					this.SendPropertyChanging();
					this._AssociatedCityID = value;
					this.SendPropertyChanged("AssociatedCityID");
					this.OnAssociatedCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deadline", DbType="DateTime2 NOT NULL")]
		public System.DateTime Deadline
		{
			get
			{
				return this._Deadline;
			}
			set
			{
				if ((this._Deadline != value))
				{
					this.OnDeadlineChanging(value);
					this.SendPropertyChanging();
					this._Deadline = value;
					this.SendPropertyChanged("Deadline");
					this.OnDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentDailyTeamCount", DbType="Int NOT NULL")]
		public int CurrentDailyTeamCount
		{
			get
			{
				return this._CurrentDailyTeamCount;
			}
			set
			{
				if ((this._CurrentDailyTeamCount != value))
				{
					this.OnCurrentDailyTeamCountChanging(value);
					this.SendPropertyChanging();
					this._CurrentDailyTeamCount = value;
					this.SendPropertyChanged("CurrentDailyTeamCount");
					this.OnCurrentDailyTeamCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlexTeams", DbType="Int NOT NULL")]
		public int FlexTeams
		{
			get
			{
				return this._FlexTeams;
			}
			set
			{
				if ((this._FlexTeams != value))
				{
					this.OnFlexTeamsChanging(value);
					this.SendPropertyChanging();
					this._FlexTeams = value;
					this.SendPropertyChanged("FlexTeams");
					this.OnFlexTeamsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasStores", DbType="Bit NOT NULL")]
		public bool HasStores
		{
			get
			{
				return this._HasStores;
			}
			set
			{
				if ((this._HasStores != value))
				{
					this.OnHasStoresChanging(value);
					this.SendPropertyChanging();
					this._HasStores = value;
					this.SendPropertyChanged("HasStores");
					this.OnHasStoresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAutoInput", DbType="Bit NOT NULL")]
		public bool IsAutoInput
		{
			get
			{
				return this._IsAutoInput;
			}
			set
			{
				if ((this._IsAutoInput != value))
				{
					this.OnIsAutoInputChanging(value);
					this.SendPropertyChanging();
					this._IsAutoInput = value;
					this.SendPropertyChanged("IsAutoInput");
					this.OnIsAutoInputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSoftRoute", DbType="Bit NOT NULL")]
		public bool IsSoftRoute
		{
			get
			{
				return this._IsSoftRoute;
			}
			set
			{
				if ((this._IsSoftRoute != value))
				{
					this.OnIsSoftRouteChanging(value);
					this.SendPropertyChanging();
					this._IsSoftRoute = value;
					this.SendPropertyChanged("IsSoftRoute");
					this.OnIsSoftRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(400)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobAssignment_JobAssignmentCheckpoint", Storage="_JobAssignmentCheckpoints", ThisKey="JobAssignmentID", OtherKey="AssociatedJobAssignmentID")]
		public EntitySet<JobAssignmentCheckpoint> JobAssignmentCheckpoints
		{
			get
			{
				return this._JobAssignmentCheckpoints;
			}
			set
			{
				this._JobAssignmentCheckpoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_JobAssignment", Storage="_City", ThisKey="AssociatedCityID", OtherKey="CityID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.JobAssignments.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.JobAssignments.Add(this);
						this._AssociatedCityID = value.CityID;
					}
					else
					{
						this._AssociatedCityID = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobAssignmentGroup_JobAssignment", Storage="_JobAssignmentGroup", ThisKey="JobAssignmentGroupMemberID", OtherKey="AssignmentGroupID", IsForeignKey=true)]
		public JobAssignmentGroup JobAssignmentGroup
		{
			get
			{
				return this._JobAssignmentGroup.Entity;
			}
			set
			{
				JobAssignmentGroup previousValue = this._JobAssignmentGroup.Entity;
				if (((previousValue != value) 
							|| (this._JobAssignmentGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobAssignmentGroup.Entity = null;
						previousValue.JobAssignments.Remove(this);
					}
					this._JobAssignmentGroup.Entity = value;
					if ((value != null))
					{
						value.JobAssignments.Add(this);
						this._JobAssignmentGroupMemberID = value.AssignmentGroupID;
					}
					else
					{
						this._JobAssignmentGroupMemberID = default(int);
					}
					this.SendPropertyChanged("JobAssignmentGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobAssignmentCheckpoints(JobAssignmentCheckpoint entity)
		{
			this.SendPropertyChanging();
			entity.JobAssignment = this;
		}
		
		private void detach_JobAssignmentCheckpoints(JobAssignmentCheckpoint entity)
		{
			this.SendPropertyChanging();
			entity.JobAssignment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stores")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StoreID;
		
		private int _LegacyStoreID;
		
		private int _AssociatedCityID;
		
		private string _StreetAddress;
		
		private string _AddressLine2;
		
		private int _ZipCode;
		
		private EntityRef<City> _City;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoreIDChanging(int value);
    partial void OnStoreIDChanged();
    partial void OnLegacyStoreIDChanging(int value);
    partial void OnLegacyStoreIDChanged();
    partial void OnAssociatedCityIDChanging(int value);
    partial void OnAssociatedCityIDChanged();
    partial void OnStreetAddressChanging(string value);
    partial void OnStreetAddressChanged();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnZipCodeChanging(int value);
    partial void OnZipCodeChanged();
    #endregion
		
		public Store()
		{
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegacyStoreID", DbType="Int NOT NULL")]
		public int LegacyStoreID
		{
			get
			{
				return this._LegacyStoreID;
			}
			set
			{
				if ((this._LegacyStoreID != value))
				{
					this.OnLegacyStoreIDChanging(value);
					this.SendPropertyChanging();
					this._LegacyStoreID = value;
					this.SendPropertyChanged("LegacyStoreID");
					this.OnLegacyStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociatedCityID", DbType="Int NOT NULL")]
		public int AssociatedCityID
		{
			get
			{
				return this._AssociatedCityID;
			}
			set
			{
				if ((this._AssociatedCityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssociatedCityIDChanging(value);
					this.SendPropertyChanging();
					this._AssociatedCityID = value;
					this.SendPropertyChanged("AssociatedCityID");
					this.OnAssociatedCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetAddress", DbType="VarChar(400) NOT NULL", CanBeNull=false)]
		public string StreetAddress
		{
			get
			{
				return this._StreetAddress;
			}
			set
			{
				if ((this._StreetAddress != value))
				{
					this.OnStreetAddressChanging(value);
					this.SendPropertyChanging();
					this._StreetAddress = value;
					this.SendPropertyChanged("StreetAddress");
					this.OnStreetAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="VarChar(400)")]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this.OnAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressLine2 = value;
					this.SendPropertyChanged("AddressLine2");
					this.OnAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="Int NOT NULL")]
		public int ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Store", Storage="_City", ThisKey="AssociatedCityID", OtherKey="CityID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Stores.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Stores.Add(this);
						this._AssociatedCityID = value.CityID;
					}
					else
					{
						this._AssociatedCityID = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
